}
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, N(d1) = nd1, N(D2) = nd2)
}
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2) = nd2)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2) = nd2)
}
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
data.frame(Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
data.frame(Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
}
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
df2 = data.frame(Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
print(df2)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
paste('Greeks')
df2 = data.frame(Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
print(df2)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
greeks_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2)
df2 = data.frame(Call.Premium = bsm_call(s = s, k= k, t = t, sd = sd, r = r) , Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
print(df2)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
show(callgreek())
View(callgreek)
a = greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
a
a
a$Rho
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(Call.Premium = bsm_call(s = s, k= k, t = t, sd = sd, r = r), d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2, Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(Call.Premium = bsm_call(s = s, k= k, t = t, sd = sd, r = r), d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2, Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
a = greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488
a$Rho
a$call.premium
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(Call.Premium = bsm_call(s = s, k= k, t = t, sd = sd, r = r), d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2, Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
bsm_call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
data.frame(call.premium = c)
}
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
df1 = data.frame(Call.Premium = bsm_call(s = s, k= k, t = t, sd = sd, r = r), d1 = d1, d2 = d2, norm.d1 = nd1, norm.d2 = nd2, Delta = Delta, Gamma = Gamma, Theta = Theta, Vega = Vega, Rho = Rho)
print(df1)
}
greeks_call(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
bsm.call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
data.frame(call.premium = c)
}
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
df1 = data.frame(estimate = c('call.premium', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega'), value = c(bsm.call(s = s, k= k, t = t, sd = sd, r = r), d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
bsm.call = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
data.frame(call.premium = c)
}
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
call.premium = bsm.call(s = s, k= k, t = t, sd = sd, r = r)
df1 = data.frame(estimate = c('call.premium', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega'), value = c(call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
View(call.estimate)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
call.premium = bsm.call(s = s, k= k, t = t, sd = sd, r = r)
df1 = data.frame(estimate = c('call.premium', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), value = c(call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
data.frame(estimate = c(12, 12, 13),value = c('anurag', 'agrawal'))
data.frame(estimate = c(12, 12, 13),value = c('anurag', 'agrawal','a'))
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
call.premium = bsm.call(s = s, k= k, t = t, sd = sd, r = r)
df1 = data.frame(value = c(call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
df1 = data.frame(c(call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
call.premium = bsm.call(s = s, k= k, t = t, sd = sd, r = r)
df1 = data.frame(c(call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
a = bsm.call(50, 40, 0.2, 0.23, 0.08)
a$call.premium
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
call.premium = bsm.call(s = s, k= k, t = t, sd = sd, r = r)
df1 = data.frame(estimate = c('call.premium', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), value = c(call.premium$call.premium, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
b = bsm.call(50, 40,t = 0.2 sd = 0.2, r = 0.08)
b = bsm.call(50, 40,t = 0.2, sd = 0.2, r = 0.08)
class(b$call.premium)
c = b$call.premium
data.frame(value = c(c, 12))
b
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df1 = data.frame(estimate = c('call.premium', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), value = c(c, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df1)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2'), value = (c, d1, d2))
print(df2)
}
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2'), value = c(c, d1, d2))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta'), value = c(c, d1, d2, nd1, nd2, intrinsic.value, speculative.premium, Delta))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium'), value = c(c, d1, d2, nd1, nd2, intrinsic.value, speculative.premium))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
class(max(1, 2))
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)'), value = c(c, d1, d2, nd1, nd2))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = bsm.call(s = s, k = k, t = t, sd = sd, r = r) - intrinsic.value
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)',  'Delta', 'Gamma', 'Theta', 'Vega','Rho'), value = c(c, d1, d2, nd1, nd2, Delta, Gamma, Theta, Vega, Rho))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
call.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
c = (s * pnorm(d1)) - (k * exp((-r * t)) * pnorm(d2))
Delta = nd1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * nd2)
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * nd2)
intrinsic.value = max(s - k,0)
speculative.premium = c - intrinsic.value
df2 = data.frame(estimate = c('call.premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), value = c(c, d1, d2, nd1, nd2,  intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df2)
}
a = call.estimate(s = 53.75, k = 50, t = 0.75, sd = 0.35, r = 0.0488)
put.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
p = (k * exp((-r * t)) * pnorm(-d2)) - (s * pnorm(-d1))
Delta = nd1 - 1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) - (r * k * exp(-r * t) * pnorm(-d2))
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * pnorm(-d2))
intrinsic.value = max(k - s,0)
speculative.premium = c - intrinsic.value
df2 = data.frame(estimate = c('premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), est.put.option = c(p, d1, d2, nd1, nd2,  intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df2)
}
put.estimate(53.75, 50, 0.75, 0.35, 0.0488)
put.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
p = (k * exp((-r * t)) * pnorm(-d2)) - (s * pnorm(-d1))
Delta = nd1 - 1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) + (r * k * exp(-r * t) * pnorm(-d2))
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = (k * t * exp(-1 * r * t) * pnorm(-d2))
intrinsic.value = max(k - s,0)
speculative.premium = p - intrinsic.value
df2 = data.frame(estimate = c('premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), est.put.option = c(p, d1, d2, nd1, nd2,  intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df2)
}
put.estimate(53.75, 50, 0.75, 0.35, 0.0488)
put.estimate = function(s, k, t, sd, r){
d1 = (log(s/k) + (r + (sd^2)/2) * t) / (sd * sqrt(t))
d2 = d1 - (sd * sqrt(t))
nd1 = pnorm(d1)
nd2 = pnorm(d2)
p = (k * exp((-r * t)) * pnorm(-d2)) - (s * pnorm(-d1))
Delta = nd1 - 1
Gamma = ((1/sqrt(2 * pi)) * exp(-1 * (((d1 ^ 2)/2))))/ (s * sd * sqrt(t))
Theta = ((-1 * s * (1/(sqrt(2 * pi))) * exp(-1 * (d1^2/2)) * sd) / (2 * sqrt(t))) + (r * k * exp(-r * t) * pnorm(-d2))
Vega = (s * sqrt(t) * (1/sqrt(2 * pi)) * exp(-1 * ((d1 ^ 2)/2)))
Rho = -1 * (k * t * exp(-1 * r * t) * pnorm(-d2))
intrinsic.value = max(k - s,0)
speculative.premium = p - intrinsic.value
df2 = data.frame(estimate = c('premium.est', 'd1', 'd2', 'n(d1)', 'n(d2)', 'intrinsic.value', 'speculative.premium', 'Delta', 'Gamma', 'Theta', 'Vega','Rho'), est.put.option = c(p, d1, d2, nd1, nd2,  intrinsic.value, speculative.premium, Delta, Gamma, Theta, Vega, Rho))
print(df2)
}
put.estimate(53.75, 50, 0.75, 0.35, 0.0488)
